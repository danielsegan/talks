// <auto-generated />
using System;
using EFCoreDemo;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCoreDemo.Migrations
{
    [DbContext(typeof(DemoContext))]
    partial class DemoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCoreDemo.Address", b =>
                {
                    b.Property<string>("AddressId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Line1");

                    b.Property<string>("Line2");

                    b.Property<int>("PersonId");

                    b.Property<string>("Phone");

                    b.Property<string>("State");

                    b.Property<string>("zip");

                    b.HasKey("AddressId");

                    b.HasIndex("PersonId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("EFCoreDemo.Invoice", b =>
                {
                    b.Property<string>("InvoiceId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BillToAddressId");

                    b.Property<int?>("CustomerPersonId");

                    b.Property<string>("ShipToAddressId");

                    b.HasKey("InvoiceId");

                    b.HasIndex("BillToAddressId");

                    b.HasIndex("CustomerPersonId");

                    b.HasIndex("ShipToAddressId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("EFCoreDemo.InvoiceItem", b =>
                {
                    b.Property<string>("InvoiceItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("InvoiceId");

                    b.Property<string>("PartNumber");

                    b.Property<int>("Quantity");

                    b.Property<decimal>("UnitCost");

                    b.HasKey("InvoiceItemId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceItem");
                });

            modelBuilder.Entity("EFCoreDemo.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<DateTime>("HireDate");

                    b.Property<string>("JobTitle");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleInital");

                    b.Property<string>("SSN");

                    b.Property<DateTime>("TermDate");

                    b.HasKey("PersonId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("EFCoreDemo.Address", b =>
                {
                    b.HasOne("EFCoreDemo.Person", "Person")
                        .WithMany("Addresses")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EFCoreDemo.Invoice", b =>
                {
                    b.HasOne("EFCoreDemo.Address", "BillTo")
                        .WithMany()
                        .HasForeignKey("BillToAddressId");

                    b.HasOne("EFCoreDemo.Person", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerPersonId");

                    b.HasOne("EFCoreDemo.Address", "ShipTo")
                        .WithMany()
                        .HasForeignKey("ShipToAddressId");
                });

            modelBuilder.Entity("EFCoreDemo.InvoiceItem", b =>
                {
                    b.HasOne("EFCoreDemo.Invoice")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("InvoiceId");
                });
#pragma warning restore 612, 618
        }
    }
}
